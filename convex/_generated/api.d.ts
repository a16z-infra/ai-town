/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.3.1.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as agent_constants from "../agent/constants";
import type * as agent_conversation from "../agent/conversation";
import type * as agent_embeddingsCache from "../agent/embeddingsCache";
import type * as agent_init from "../agent/init";
import type * as agent_main from "../agent/main";
import type * as agent_memory from "../agent/memory";
import type * as constants from "../constants";
import type * as crons from "../crons";
import type * as engine_constants from "../engine/constants";
import type * as engine_game from "../engine/game";
import type * as engine_gameTable from "../engine/gameTable";
import type * as engine_historicalTable from "../engine/historicalTable";
import type * as game_aiTown from "../game/aiTown";
import type * as game_conversationMembers from "../game/conversationMembers";
import type * as game_conversations from "../game/conversations";
import type * as game_inputs from "../game/inputs";
import type * as game_locations from "../game/locations";
import type * as game_main from "../game/main";
import type * as game_movement from "../game/movement";
import type * as game_players from "../game/players";
import type * as http from "../http";
import type * as init from "../init";
import type * as messages from "../messages";
import type * as music from "../music";
import type * as testing from "../testing";
import type * as util_assertNever from "../util/assertNever";
import type * as util_asyncMap from "../util/asyncMap";
import type * as util_geometry from "../util/geometry";
import type * as util_isSimpleObject from "../util/isSimpleObject";
import type * as util_minheap from "../util/minheap";
import type * as util_ollama from "../util/ollama";
import type * as util_openai from "../util/openai";
import type * as util_sleep from "../util/sleep";
import type * as util_types from "../util/types";
import type * as world from "../world";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  "agent/constants": typeof agent_constants;
  "agent/conversation": typeof agent_conversation;
  "agent/embeddingsCache": typeof agent_embeddingsCache;
  "agent/init": typeof agent_init;
  "agent/main": typeof agent_main;
  "agent/memory": typeof agent_memory;
  constants: typeof constants;
  crons: typeof crons;
  "engine/constants": typeof engine_constants;
  "engine/game": typeof engine_game;
  "engine/gameTable": typeof engine_gameTable;
  "engine/historicalTable": typeof engine_historicalTable;
  "game/aiTown": typeof game_aiTown;
  "game/conversationMembers": typeof game_conversationMembers;
  "game/conversations": typeof game_conversations;
  "game/inputs": typeof game_inputs;
  "game/locations": typeof game_locations;
  "game/main": typeof game_main;
  "game/movement": typeof game_movement;
  "game/players": typeof game_players;
  http: typeof http;
  init: typeof init;
  messages: typeof messages;
  music: typeof music;
  testing: typeof testing;
  "util/assertNever": typeof util_assertNever;
  "util/asyncMap": typeof util_asyncMap;
  "util/geometry": typeof util_geometry;
  "util/isSimpleObject": typeof util_isSimpleObject;
  "util/minheap": typeof util_minheap;
  "util/ollama": typeof util_ollama;
  "util/openai": typeof util_openai;
  "util/sleep": typeof util_sleep;
  "util/types": typeof util_types;
  world: typeof world;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
